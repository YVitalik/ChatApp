@page "/register"
@using ChatApp.BLL.DTOs.AdministrationDTOs
@using ChatApp.BLL.Interfaces
@using ChatApp.BLL.Services
@using Newtonsoft.Json
@using System.Text
@inject NavigationManager NavManager
@inherits Base

@if (_errorsFromServer.Count > 0)
{
	foreach (var mistake in _errorsFromServer)
	{
		<p>@mistake</p>
	}
}
else
{
	<p></p>
}

<EditForm Model="RegisterUserDto" OnValidSubmit="OnValid" style="max-width:500px;">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-2">
		<InputText class="form-control" @bind-Value="RegisterUserDto.Username" placeholder="Username"></InputText>
	</div>
	<div class="mb-2">
		<InputText type="password" class="form-control" @bind-Value="RegisterUserDto.Password" placeholder="Enter Password"></InputText>
	</div>
	<div class="mb-2">
		<InputText class="form-control" @bind-Value="RegisterUserDto.Email" placeholder="Email"></InputText>
	</div>
	<div class="mb-2 text-right">
		<button class="btn btn-secondary">Register</button>
	</div>
</EditForm>

@code {
    
	[Inject] private IIntermediateUserService _userStateService { get; set; }

	private RegisterDTO RegisterUserDto = new RegisterDTO();

	private async void OnValid()
	{
		var serverResponse = await _userStateService.Register(RegisterUserDto);
		await CheckIfServerResponseIsSucceded(serverResponse, "/");
	}
}
